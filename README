# -*- mode: org -*-

* Introduction
Asyncronous Reliable Extensible Scheme Network REPL.  Highly inspired
by [[https://nrepl.org/nrepl/index.html][nREPL]].

* Open Questions
- How to work with fibers in nrepl?  Maybe C-2 C-c C-e to entered to
  the clonned session with fibers spawned.
- Bootstrap from guile network repl? (Send guile-nrepl
  implementation to remote network repl server to make it nrepl).
- Multiple guile languages support.

* Other REPLs Quirks
One of the reasons this project started is unfortunate missbehave of
current REPL soultions in different situation and here is a list of
some of them:
- Text based REPL over socket is not interruptable.
- call/cc works when pasted into prompt of the repl, but fails when
  evaling from buffer with C-x C-e.
- It's not possible to see stdout until evaluation completed.
- Gider tests hangs repl on errors.
- CAPF function is injected, even if there is no connection to REPL
  and throws errors preventing other CAPFs to work.
- There is no way to provide stdin input to running expression.
- Go to definition doesn't work for with-input-from-port.

* Links
** NREPL
*** Servers
- https://github.com/nrepl/nrepl :: default clojure implementation.
- https://nrepl.org/nrepl/1.0/building_servers.html :: some tips.
- https://gitlab.com/technomancy/ogion/-/blob/master/main.rkt :: very
  simple Racket nREPL.
- https://gitlab.com/technomancy/jeejah :: lua nREPL server.
- https://github.com/babashka/babashka.nrepl :: probably most advanced
  3rd party nREPL server implementation, doesn't support interrupts.
- https://docs.cider.mx/cider-nrepl/nrepl-api/ops.html#info :: extensions
  of nREPL for CIDER.

*** Debugging Tool
- https://github.com/clojure-emacs/sayid
- https://github.com/philoskim/debux
- https://github.com/jpmonettas/flow-storm-debugger
- https://docs.cider.mx/cider/debugging/debugger.html
- https://www.gnu.org/software/guile/manual/html_node/Interactive-Debugging.html
- https://www.gnu.org/software/guile/manual/html_node/Debugging.html

*** Tools
- https://github.com/lambdaisland/nrepl-proxy

*** Clients
- https://github.com/sanel/monroe/
- https://github.com/Sasanidas/Rail

*** Bencode
- https://github.com/flatwhatson/grump/blob/master/grump-lib/bencode.scm
- https://github.com/caolan/chicken-bencode
- http://www.bittorrent.org/beps/bep_0003.html#bencoding
- https://wiki.theory.org/BitTorrentSpecification#Bencoding

* Acknowledgements
Thanks for inspiration, help and motivation to Nikita Domnitskii,
Maxime Devos, Andy Wingo, Bozhidar Batsov, Andrey Listopadov.

